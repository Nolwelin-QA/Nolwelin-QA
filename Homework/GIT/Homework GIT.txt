GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполните в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. Напротив каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гитхаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер: 			git clone https://github.com/Nolwelin-QA/JSON.git
 6. Внутри локального JSON создать файл “new.json”:				touch ~/git_qa/JSON/new.json
 7. Добавить файл под гит:								git add new.json
 8. Закоммитить файл:									git commit -m "Added file new.json"
 9. Отправить файл на внешний GitHub репозиторий:				git push
 10. Отредактировать содержимое файла “new.json” -
     написать информацию о себе (ФИО, возраст, 
     количество домашних животных, будущая желаемая зарплата).
     Всё написать в формате JSON:							vim new.json -> {"Lastname":		"Korchineli",
													           "Name":      	"Varvara",
													           "Age":        	36,
        													     "Number_of_pets":  0,
        													     "Desired_salary":  "1000$"} ->
												esc -> ":" -> "wq" -> Enter

 11. Отправить изменения на внешний репозиторий: 				git add new.json -> git commit -m "Added json text" ->
												git push
 12. Создать файл preferences.json:							touch preferences.json
 13. В файл preferences.json добавить информацию о своих
     предпочтениях (Любимый фильм, любимый сериал, 
     любимая еда, любимое время года,
     страна которую хотели бы посетить) в формате JSON:			vim preferences.json -> {"Favorit_movie":	 "The Lord of the Rings",
																 "Favorit_series": "Breaking Bad",
																 "Favorit_food":	 "Barbecue",
																 "Favorit_season": "Late spring",
																 "Want_to_visit":	 "Iceland" } -> 
												esc -> ":" -> "wq" -> Enter		
 14. Создать файл skills.json добавить информацию о скиллах,
     которые будут изучены на курсе в формате JSON:				vim skills.json -> {"Skills": [
            													  "Test Design", "Writing bug reports",
															  "Theory of testing", "Web testing",
															  "Mobile testing", "REST API testing",
           														  "Charles Proxy", "Fiddler",
															  "Android Studio", "ADB", "Postman",
															  "Linux Terminal", "Databases", "GIT", 
															  "Pyton"]} -> esc -> ":" -> "wq" -> Enter

 15. Отправить сразу 2 файла на внешний репозиторий: 				git add . -> git commit -m "Added two json files" -> git push
 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON:			git fetch -> git pull (git pull)


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер:			git clone https://github.com/Nolwelin-QA/XML.git
 23. Внутри локального XML создать файл “new.xml”:				touch new.xml
 24. Добавить файл под гит:								git add new.xml
 25. Закоммитить файл:									git commit -m "Added new xml file"
 26. Отправить файл на внешний GitHub репозиторий:				git push
 27. Отредактировать содержимое файла “new.xml” - 
     написать информацию о себе (ФИО, возраст,
     количество домашних животных,
     будущая желаемая зарплата). Всё написать в формате XML:		vim new.xml -> i ->
												<?xml version="1.0" encoding="UTF-8"?>
												<about_me>
												<lastname>Korchineli</lastname>
												<name>Varvara</name>
												<age>36</age>
												<number_of_pets>0</number_of_pets>
												<desired_salary>1000$</desired_salary>
												</about_me> -> esc -> ":" -> wq -> Enter
 28. Отправить изменения на внешний репозиторий:				git add . -> git commit -m "Added xml text" -> git push
 29. Создать файл preferences.xml:							touch preferences.xml
 30. В файл preferences.xml добавить информацию
     о своих предпочтениях (Любимый фильм, любимый сериал,
     любимая еда, любимое время года, страна,
     которую хотели бы посетить) в формате XML:					vim preferences.xml -> i ->
												<?xml version="1.0" encoding="UTF-8"?>
												<preferences>
       											<favorit_movie>The Lord of the Rings</favorit_movie>
        											<favorit_series>Breaking Bad</favorit_series>
        											<favorit_food>Barbecue</favorit_food>
        											<favorit_season>Late spring</favorit_season>
        											<want_to_visit>Iceland</want_to_visit>
												</preferences> -> esc -> ":" -> wq -> Enter

 31. Создать файл skills.xml добавить информацию о скиллах,
     которые будут изучены на курсе в формате XML:				vim skills.xml -> i ->
												<?xml version="1.0" encoding="utf-8"?>
												<Skills>
												<string-array name="Skills">
       											<skill>Test Design</skill>
        											<skill>Writing bug reports</skill>
        											<skill>Theory of testing</skill>
        											<skill>Web testing</skill>
        											<skill>Mobile testing</skill>
        											<skill>REST API testing</skill>
        											<skill>Charles Proxy</skill>
        											<skill>Fiddler</skill>
        											<skill>Android Studio</skill>
        											<skill>ADB</skill>
        											<skill>Postman</skill>
        											<skill>Linux Terminal</skill>
        											<skill>Databases</skill>
        											<skill>GIT</skill>
        											<skill>Pyton</skill>
												</string-array>
												</Skills> -> esc -> ":" -> wq -> Enter


 32. Сделать коммит в одну строку:							git commit -am "Added two xml files"
 33. Отправить сразу 2 файла на внешний репозиторий:				git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml,
     добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML:			git pull


TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер:			git clone https://github.com/Nolwelin-QA/TXT.git
 3. Внутри локального TXT создать файл “new.txt”:				touch new.txt
 4. Добавить файл под гит:								git add new.txt
 5. Закоммитить файл:									git commit -m "Added text file"
 6. Отправить файл на внешний GitHub репозиторий:				git push
 7. Отредактировать содержимое файла “new.txt” -
    написать информацию о себе (ФИО, возраст, 
    количество домашних животных, будущая желаемая зарплата).
    Всё написать в формате TXT:							vim new.txt -> i ->
												Lastname: Korchineli,
												Name: Varvara,
												Age: 36,
												Number_of_pets: 0,
												Desired_salary: 1000$ -> 
												esc -> ":" -> wq -> Enter
 8. Отправить изменения на внешний репозиторий:					git commit -am "Added text" -> git push
 9. Создать файл preferences.txt:							touch preferences.txt
 10. В файл preferences.txt” добавить информацию
     о своих предпочтениях (Любимый фильм, любимый сериал,
     любимая еда, любимое время года, страна,
     которую хотели бы посетить) в формате TXT:					vim preferences -> i ->
												Favorit_movie: The Lord of the Rings,
												Favorit_series: Breaking Bad,
												Favorit_food: Barbecue,
												Favorit_season: Late spring,
												Want_to_visit: Iceland ->
												esc -> ":" -> wq -> Enter
 11. Создать файл skills.txt добавить информацию 
     о скиллах которые будут изучены на курсе в формате TXT:		vim skills.txt -> i ->
												Skills: Test Design, Writing bug reports, Theory of testing,
												Web testing, Mobile testing, REST API testing, Charles Proxy, 
												Fiddler, Android Studio, ADB, Postman, Linux Terminal, Databases,
												GIT, Pyton -> esc -> ":" -> wq -> Enter
 12. Сделать коммит в одну строку:							git commit -am "Added two txt files"
 13. Отправить сразу 2 файла на внешний репозиторий:				git push
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt,
     добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT:			git pull
